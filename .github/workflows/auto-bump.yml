name: Auto Bump & Publish

permissions:
  contents: write
  pull-requests: write

on:
  # ogni 10 minuti
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  bump-and-publish:
    runs-on: ubuntu-latest
    steps:
      # 1. Clona la repo
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      # 2. Setup Node
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      # 3. Configura Git
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 4. Bump patch version (es. 1.2.3 â†’ 1.2.4)
      - name: Bump patch version
        id: bump
        run: |
          BUMP_OUTPUT=$(npm version patch -m "chore(release): bump version to %s")
          VERSION=${BUMP_OUTPUT#v}
          echo "new-version=$VERSION" >> $GITHUB_OUTPUT

      # 5. Installa dipendenze (serve a yarn publish)
      - run: npm install

      # 6. Create PR with bumped version
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: 'chore(release): bump version to ${{ steps.bump.outputs.new-version }}'
          branch: auto-bump-${{ steps.bump.outputs.new-version }}
          title: 'ðŸ”¼ Bump to ${{ steps.bump.outputs.new-version }}'
          body: 'Version bumped automatically.'
          delete-branch: true


      - name: Merge pull request
        if: ${{ steps.create_pr.outputs.pull-request-number }}
        uses: peter-evans/merge-pull-request@v2
        with:
          token: ${{ secrets.GH_PAT }}
          pull-request: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash
          delete-branch: true

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
          ref: main

      # 7. Configura autenticazione npm
      - name: Configure npm auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      # 8. Pubblica su npm (salta se esiste giÃ )
      - name: Publish package
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Attempting to publish version $CURRENT_VERSION"
          if npm view carrot-scan@$CURRENT_VERSION --json >/dev/null 2>&1; then
            echo "Version $CURRENT_VERSION already exists â€“ skipping publish."
          else
            yarn publish --non-interactive
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}