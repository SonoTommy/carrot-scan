name: Auto Bump & Fix

permissions:
  contents: write
  pull-requests: write

on:
  # Pianificato: ogni 10 minuti
  schedule:
    - cron: '*/10 * * * *'
  # Permette di far partire manualmente il workflow dal tab Actions
  workflow_dispatch:

jobs:
  bump-patch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # necessario per tag/commit history
          token: ${{ secrets.GH_PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump patch version
        id: bump
        run: |
          # bump patch and capture new version (e.g. "v1.2.3")
          BUMP_OUTPUT=$(npm version patch -m "chore(release): bump version to %s")
          # strip leading "v"
          VERSION=${BUMP_OUTPUT#v}
          SANITIZED_VERSION=${VERSION//./_}
          echo "Sanitized version: $SANITIZED_VERSION"
          echo "New version: $VERSION"
          # set GitHub Actions output
          echo "new-version=$VERSION" >> $GITHUB_OUTPUT
          echo "sanitized-version=$SANITIZED_VERSION" >> $GITHUB_OUTPUT

      - name: Install & format
        run: |
          npm install
          # esegui Prettier o simili, se configurato:
          npm run format -- --write

      - name: Security scan & autofix (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          autofix: true
        env:
          SEMGREP_RULES: p/owasp-top-ten

      - name: Push changes & create PR
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: 'chore(release): bump version to ${{ steps.bump.outputs.new-version }}'
          branch: auto-bump-${{ steps.bump.outputs.new-version }}
          title: 'üîº Bump to ${{ steps.bump.outputs.new-version }}'
          body: |
            - Version bumped automatically  
            - Lint/format fixes applied

            ## Usage

            After every automatic bump, the workflow generates a convenience stub that matches the new version number.  
            Import it and call it as shown below ‚Äì just replace **X.Y.Z** with the package version you are using.

            ```js
            import { featureX_Y_Z } from './src/feature-X.Y.Z.js';

            featureX_Y_Z();
            ```

            ### Scanner API

            The scanner now supports an **options** object.  
            For instance:

            ```js
            import { initScanner } from './scanner.js';

            initScanner({
              verbose: true,
              concurrency: 4
            });
            ```

      - name: Enable PR Auto-merge
        if: ${{ steps.create_pr.outputs.pull-request-number }}
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GH_PAT }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash

      - name: Configure npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish package
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Attempting to publish version $CURRENT_VERSION"
          if npm view carrot-scan@$CURRENT_VERSION --json >/dev/null 2>&1; then
            echo "Version $CURRENT_VERSION is already on the registry ‚Äì skipping publish."
          else
            yarn publish --non-interactive
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  auto-fix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - run: npm ci

      - name: Lint & Prettier (auto-fix)
        uses: wearerequired/lint-action@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          auto_fix: true
          eslint: true
          prettier: true

      - name: Security scan & autofix (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          autofix: true
        env:
          SEMGREP_RULES: p/owasp-top-ten

      - name: Commit & push changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          branch: auto-fix
          create_branch: true
          commit_message: 'style: auto-lint & format [skip ci]'
          push_options: '--force-with-lease'
          status_options: '-uno'

      - name: Create / update PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: 'style: auto-lint & format'
          branch: auto-fix
          title: '‚ôªÔ∏è Auto-lint & format'
          body: |
            This PR is generated automatically every 10 minutes.
            It fixes lint errors and applies Prettier formatting.



  deepseek-review:
    needs: bump-patch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Ollama Code Review
        uses: zakerby/gh-code-review@v0.0.2
        with:
          llm-model: 'deepseek-r1:1.5b'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
