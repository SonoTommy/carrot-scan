name: Auto Bump & Publish - copito

on:
  workflow_dispatch:
  schedule:
    # Ogni 5 minuti
    - cron: '*/5 * * * *'
  repository_dispatch:
    types: [auto-bump]

# Blocca le esecuzioni parallele: le nuove run vengono messe in coda
concurrency:
  group: auto-bump-${{ github.ref }}
  cancel-in-progress: false

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Hello World Check
        run: echo "Hello, world! GitHub Copilot job is set up and running."
  improve-with-copilot:
    needs: copilot-setup-steps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      - name: Create Copilot improvement PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            // 1. Create a new branch from main
            const branchName = `copilot-improvements-${new Date().toISOString()}`;
            const { data: ref } = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/main`
            });
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${branchName}`,
              sha: ref.object.sha
            });
            // 2. Create a pull request on that branch
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: branchName,
              base: 'main',
              title: "Miglioramenti al codice",
              body: "Per favore analizza il mio codice e fai qualche miglioria sui file README.md, index.js e cli.js, aggiungi alcune funzioni utili."
            });
            // 3. Fetch the Copilot bot ID as reviewer
            const query = `
              query($owner:String!,$repo:String!){
                repository(owner:$owner,name:$repo){
                  suggestedActors(capabilities:[CAN_BE_ASSIGNED,CAN_BE_REQUESTED_AS_REVIEWER],first:1){
                    nodes{...on Bot{id}}
                  }
                }
              }
            `;
            const response = await github.graphql(query, {
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const botId = response.repository.suggestedActors.nodes[0].id;
            // 4. Request Copilot as reviewer
            const mutation = `
              mutation($prId:ID!,$reviewerIds:[ID!]!){
                addPullRequestReviewers(input:{pullRequestId:$prId,reviewerIds:$reviewerIds}){
                  pullRequest{id}
                }
              }
            `;
            await github.graphql(mutation, {
              prId: pr.data.node_id,
              reviewerIds: [botId]
            });
  publish:
    needs: improve-with-copilot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
          ref: main

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Configure npm auth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Bump version for publish
        id: bump_publish
        run: |
          npm version patch --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          if git diff --cached --quiet; then
            echo "No version bump to commit."
          else
            git commit -m "chore(release): bump version to ${{ steps.bump_publish.outputs.new_version }}"
            git push origin main
          fi

      - name: Publish package
        run: |
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Trigger next run
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'auto-bump',
              client_payload: {}
            })